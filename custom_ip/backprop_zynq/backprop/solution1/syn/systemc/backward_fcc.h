// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _backward_fcc_HH_
#define _backward_fcc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "backward_fcc_fmulbkb.h"
#include "backward_fcc_AXILiteS_s_axi.h"
#include "backward_fcc_x_m_axi.h"
#include "backward_fcc_w_m_axi.h"
#include "backward_fcc_dx_m_axi.h"
#include "backward_fcc_dy_m_axi.h"
#include "backward_fcc_db_m_axi.h"
#include "backward_fcc_dw_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_X_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_X_ID_WIDTH = 1,
         unsigned int C_M_AXI_X_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_X_DATA_WIDTH = 32,
         unsigned int C_M_AXI_X_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_X_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_X_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_X_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_W_ID_WIDTH = 1,
         unsigned int C_M_AXI_W_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_DATA_WIDTH = 32,
         unsigned int C_M_AXI_W_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_Y_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_Y_ID_WIDTH = 1,
         unsigned int C_M_AXI_Y_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_Y_DATA_WIDTH = 32,
         unsigned int C_M_AXI_Y_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_Y_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_Y_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_Y_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_B_ID_WIDTH = 1,
         unsigned int C_M_AXI_B_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_DATA_WIDTH = 32,
         unsigned int C_M_AXI_B_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_B_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DX_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DX_ID_WIDTH = 1,
         unsigned int C_M_AXI_DX_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DX_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DX_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DX_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DX_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DX_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DY_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DY_ID_WIDTH = 1,
         unsigned int C_M_AXI_DY_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DY_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DY_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DY_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DY_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DY_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DB_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DB_ID_WIDTH = 1,
         unsigned int C_M_AXI_DB_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DB_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DB_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DB_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DB_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DB_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DW_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DW_ID_WIDTH = 1,
         unsigned int C_M_AXI_DW_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DW_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DW_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DW_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DW_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DW_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct backward_fcc : public sc_module {
    // Port declarations 383
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_x_AWVALID;
    sc_in< sc_logic > m_axi_x_AWREADY;
    sc_out< sc_uint<C_M_AXI_X_ADDR_WIDTH> > m_axi_x_AWADDR;
    sc_out< sc_uint<C_M_AXI_X_ID_WIDTH> > m_axi_x_AWID;
    sc_out< sc_lv<8> > m_axi_x_AWLEN;
    sc_out< sc_lv<3> > m_axi_x_AWSIZE;
    sc_out< sc_lv<2> > m_axi_x_AWBURST;
    sc_out< sc_lv<2> > m_axi_x_AWLOCK;
    sc_out< sc_lv<4> > m_axi_x_AWCACHE;
    sc_out< sc_lv<3> > m_axi_x_AWPROT;
    sc_out< sc_lv<4> > m_axi_x_AWQOS;
    sc_out< sc_lv<4> > m_axi_x_AWREGION;
    sc_out< sc_uint<C_M_AXI_X_AWUSER_WIDTH> > m_axi_x_AWUSER;
    sc_out< sc_logic > m_axi_x_WVALID;
    sc_in< sc_logic > m_axi_x_WREADY;
    sc_out< sc_uint<C_M_AXI_X_DATA_WIDTH> > m_axi_x_WDATA;
    sc_out< sc_uint<C_M_AXI_X_DATA_WIDTH/8> > m_axi_x_WSTRB;
    sc_out< sc_logic > m_axi_x_WLAST;
    sc_out< sc_uint<C_M_AXI_X_ID_WIDTH> > m_axi_x_WID;
    sc_out< sc_uint<C_M_AXI_X_WUSER_WIDTH> > m_axi_x_WUSER;
    sc_out< sc_logic > m_axi_x_ARVALID;
    sc_in< sc_logic > m_axi_x_ARREADY;
    sc_out< sc_uint<C_M_AXI_X_ADDR_WIDTH> > m_axi_x_ARADDR;
    sc_out< sc_uint<C_M_AXI_X_ID_WIDTH> > m_axi_x_ARID;
    sc_out< sc_lv<8> > m_axi_x_ARLEN;
    sc_out< sc_lv<3> > m_axi_x_ARSIZE;
    sc_out< sc_lv<2> > m_axi_x_ARBURST;
    sc_out< sc_lv<2> > m_axi_x_ARLOCK;
    sc_out< sc_lv<4> > m_axi_x_ARCACHE;
    sc_out< sc_lv<3> > m_axi_x_ARPROT;
    sc_out< sc_lv<4> > m_axi_x_ARQOS;
    sc_out< sc_lv<4> > m_axi_x_ARREGION;
    sc_out< sc_uint<C_M_AXI_X_ARUSER_WIDTH> > m_axi_x_ARUSER;
    sc_in< sc_logic > m_axi_x_RVALID;
    sc_out< sc_logic > m_axi_x_RREADY;
    sc_in< sc_uint<C_M_AXI_X_DATA_WIDTH> > m_axi_x_RDATA;
    sc_in< sc_logic > m_axi_x_RLAST;
    sc_in< sc_uint<C_M_AXI_X_ID_WIDTH> > m_axi_x_RID;
    sc_in< sc_uint<C_M_AXI_X_RUSER_WIDTH> > m_axi_x_RUSER;
    sc_in< sc_lv<2> > m_axi_x_RRESP;
    sc_in< sc_logic > m_axi_x_BVALID;
    sc_out< sc_logic > m_axi_x_BREADY;
    sc_in< sc_lv<2> > m_axi_x_BRESP;
    sc_in< sc_uint<C_M_AXI_X_ID_WIDTH> > m_axi_x_BID;
    sc_in< sc_uint<C_M_AXI_X_BUSER_WIDTH> > m_axi_x_BUSER;
    sc_out< sc_logic > m_axi_w_AWVALID;
    sc_in< sc_logic > m_axi_w_AWREADY;
    sc_out< sc_uint<C_M_AXI_W_ADDR_WIDTH> > m_axi_w_AWADDR;
    sc_out< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_w_AWID;
    sc_out< sc_lv<8> > m_axi_w_AWLEN;
    sc_out< sc_lv<3> > m_axi_w_AWSIZE;
    sc_out< sc_lv<2> > m_axi_w_AWBURST;
    sc_out< sc_lv<2> > m_axi_w_AWLOCK;
    sc_out< sc_lv<4> > m_axi_w_AWCACHE;
    sc_out< sc_lv<3> > m_axi_w_AWPROT;
    sc_out< sc_lv<4> > m_axi_w_AWQOS;
    sc_out< sc_lv<4> > m_axi_w_AWREGION;
    sc_out< sc_uint<C_M_AXI_W_AWUSER_WIDTH> > m_axi_w_AWUSER;
    sc_out< sc_logic > m_axi_w_WVALID;
    sc_in< sc_logic > m_axi_w_WREADY;
    sc_out< sc_uint<C_M_AXI_W_DATA_WIDTH> > m_axi_w_WDATA;
    sc_out< sc_uint<C_M_AXI_W_DATA_WIDTH/8> > m_axi_w_WSTRB;
    sc_out< sc_logic > m_axi_w_WLAST;
    sc_out< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_w_WID;
    sc_out< sc_uint<C_M_AXI_W_WUSER_WIDTH> > m_axi_w_WUSER;
    sc_out< sc_logic > m_axi_w_ARVALID;
    sc_in< sc_logic > m_axi_w_ARREADY;
    sc_out< sc_uint<C_M_AXI_W_ADDR_WIDTH> > m_axi_w_ARADDR;
    sc_out< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_w_ARID;
    sc_out< sc_lv<8> > m_axi_w_ARLEN;
    sc_out< sc_lv<3> > m_axi_w_ARSIZE;
    sc_out< sc_lv<2> > m_axi_w_ARBURST;
    sc_out< sc_lv<2> > m_axi_w_ARLOCK;
    sc_out< sc_lv<4> > m_axi_w_ARCACHE;
    sc_out< sc_lv<3> > m_axi_w_ARPROT;
    sc_out< sc_lv<4> > m_axi_w_ARQOS;
    sc_out< sc_lv<4> > m_axi_w_ARREGION;
    sc_out< sc_uint<C_M_AXI_W_ARUSER_WIDTH> > m_axi_w_ARUSER;
    sc_in< sc_logic > m_axi_w_RVALID;
    sc_out< sc_logic > m_axi_w_RREADY;
    sc_in< sc_uint<C_M_AXI_W_DATA_WIDTH> > m_axi_w_RDATA;
    sc_in< sc_logic > m_axi_w_RLAST;
    sc_in< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_w_RID;
    sc_in< sc_uint<C_M_AXI_W_RUSER_WIDTH> > m_axi_w_RUSER;
    sc_in< sc_lv<2> > m_axi_w_RRESP;
    sc_in< sc_logic > m_axi_w_BVALID;
    sc_out< sc_logic > m_axi_w_BREADY;
    sc_in< sc_lv<2> > m_axi_w_BRESP;
    sc_in< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_w_BID;
    sc_in< sc_uint<C_M_AXI_W_BUSER_WIDTH> > m_axi_w_BUSER;
    sc_out< sc_logic > m_axi_y_AWVALID;
    sc_in< sc_logic > m_axi_y_AWREADY;
    sc_out< sc_uint<C_M_AXI_Y_ADDR_WIDTH> > m_axi_y_AWADDR;
    sc_out< sc_uint<C_M_AXI_Y_ID_WIDTH> > m_axi_y_AWID;
    sc_out< sc_lv<8> > m_axi_y_AWLEN;
    sc_out< sc_lv<3> > m_axi_y_AWSIZE;
    sc_out< sc_lv<2> > m_axi_y_AWBURST;
    sc_out< sc_lv<2> > m_axi_y_AWLOCK;
    sc_out< sc_lv<4> > m_axi_y_AWCACHE;
    sc_out< sc_lv<3> > m_axi_y_AWPROT;
    sc_out< sc_lv<4> > m_axi_y_AWQOS;
    sc_out< sc_lv<4> > m_axi_y_AWREGION;
    sc_out< sc_uint<C_M_AXI_Y_AWUSER_WIDTH> > m_axi_y_AWUSER;
    sc_out< sc_logic > m_axi_y_WVALID;
    sc_in< sc_logic > m_axi_y_WREADY;
    sc_out< sc_uint<C_M_AXI_Y_DATA_WIDTH> > m_axi_y_WDATA;
    sc_out< sc_uint<C_M_AXI_Y_DATA_WIDTH/8> > m_axi_y_WSTRB;
    sc_out< sc_logic > m_axi_y_WLAST;
    sc_out< sc_uint<C_M_AXI_Y_ID_WIDTH> > m_axi_y_WID;
    sc_out< sc_uint<C_M_AXI_Y_WUSER_WIDTH> > m_axi_y_WUSER;
    sc_out< sc_logic > m_axi_y_ARVALID;
    sc_in< sc_logic > m_axi_y_ARREADY;
    sc_out< sc_uint<C_M_AXI_Y_ADDR_WIDTH> > m_axi_y_ARADDR;
    sc_out< sc_uint<C_M_AXI_Y_ID_WIDTH> > m_axi_y_ARID;
    sc_out< sc_lv<8> > m_axi_y_ARLEN;
    sc_out< sc_lv<3> > m_axi_y_ARSIZE;
    sc_out< sc_lv<2> > m_axi_y_ARBURST;
    sc_out< sc_lv<2> > m_axi_y_ARLOCK;
    sc_out< sc_lv<4> > m_axi_y_ARCACHE;
    sc_out< sc_lv<3> > m_axi_y_ARPROT;
    sc_out< sc_lv<4> > m_axi_y_ARQOS;
    sc_out< sc_lv<4> > m_axi_y_ARREGION;
    sc_out< sc_uint<C_M_AXI_Y_ARUSER_WIDTH> > m_axi_y_ARUSER;
    sc_in< sc_logic > m_axi_y_RVALID;
    sc_out< sc_logic > m_axi_y_RREADY;
    sc_in< sc_uint<C_M_AXI_Y_DATA_WIDTH> > m_axi_y_RDATA;
    sc_in< sc_logic > m_axi_y_RLAST;
    sc_in< sc_uint<C_M_AXI_Y_ID_WIDTH> > m_axi_y_RID;
    sc_in< sc_uint<C_M_AXI_Y_RUSER_WIDTH> > m_axi_y_RUSER;
    sc_in< sc_lv<2> > m_axi_y_RRESP;
    sc_in< sc_logic > m_axi_y_BVALID;
    sc_out< sc_logic > m_axi_y_BREADY;
    sc_in< sc_lv<2> > m_axi_y_BRESP;
    sc_in< sc_uint<C_M_AXI_Y_ID_WIDTH> > m_axi_y_BID;
    sc_in< sc_uint<C_M_AXI_Y_BUSER_WIDTH> > m_axi_y_BUSER;
    sc_out< sc_logic > m_axi_b_AWVALID;
    sc_in< sc_logic > m_axi_b_AWREADY;
    sc_out< sc_uint<C_M_AXI_B_ADDR_WIDTH> > m_axi_b_AWADDR;
    sc_out< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_AWID;
    sc_out< sc_lv<8> > m_axi_b_AWLEN;
    sc_out< sc_lv<3> > m_axi_b_AWSIZE;
    sc_out< sc_lv<2> > m_axi_b_AWBURST;
    sc_out< sc_lv<2> > m_axi_b_AWLOCK;
    sc_out< sc_lv<4> > m_axi_b_AWCACHE;
    sc_out< sc_lv<3> > m_axi_b_AWPROT;
    sc_out< sc_lv<4> > m_axi_b_AWQOS;
    sc_out< sc_lv<4> > m_axi_b_AWREGION;
    sc_out< sc_uint<C_M_AXI_B_AWUSER_WIDTH> > m_axi_b_AWUSER;
    sc_out< sc_logic > m_axi_b_WVALID;
    sc_in< sc_logic > m_axi_b_WREADY;
    sc_out< sc_uint<C_M_AXI_B_DATA_WIDTH> > m_axi_b_WDATA;
    sc_out< sc_uint<C_M_AXI_B_DATA_WIDTH/8> > m_axi_b_WSTRB;
    sc_out< sc_logic > m_axi_b_WLAST;
    sc_out< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_WID;
    sc_out< sc_uint<C_M_AXI_B_WUSER_WIDTH> > m_axi_b_WUSER;
    sc_out< sc_logic > m_axi_b_ARVALID;
    sc_in< sc_logic > m_axi_b_ARREADY;
    sc_out< sc_uint<C_M_AXI_B_ADDR_WIDTH> > m_axi_b_ARADDR;
    sc_out< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_ARID;
    sc_out< sc_lv<8> > m_axi_b_ARLEN;
    sc_out< sc_lv<3> > m_axi_b_ARSIZE;
    sc_out< sc_lv<2> > m_axi_b_ARBURST;
    sc_out< sc_lv<2> > m_axi_b_ARLOCK;
    sc_out< sc_lv<4> > m_axi_b_ARCACHE;
    sc_out< sc_lv<3> > m_axi_b_ARPROT;
    sc_out< sc_lv<4> > m_axi_b_ARQOS;
    sc_out< sc_lv<4> > m_axi_b_ARREGION;
    sc_out< sc_uint<C_M_AXI_B_ARUSER_WIDTH> > m_axi_b_ARUSER;
    sc_in< sc_logic > m_axi_b_RVALID;
    sc_out< sc_logic > m_axi_b_RREADY;
    sc_in< sc_uint<C_M_AXI_B_DATA_WIDTH> > m_axi_b_RDATA;
    sc_in< sc_logic > m_axi_b_RLAST;
    sc_in< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_RID;
    sc_in< sc_uint<C_M_AXI_B_RUSER_WIDTH> > m_axi_b_RUSER;
    sc_in< sc_lv<2> > m_axi_b_RRESP;
    sc_in< sc_logic > m_axi_b_BVALID;
    sc_out< sc_logic > m_axi_b_BREADY;
    sc_in< sc_lv<2> > m_axi_b_BRESP;
    sc_in< sc_uint<C_M_AXI_B_ID_WIDTH> > m_axi_b_BID;
    sc_in< sc_uint<C_M_AXI_B_BUSER_WIDTH> > m_axi_b_BUSER;
    sc_out< sc_logic > m_axi_dx_AWVALID;
    sc_in< sc_logic > m_axi_dx_AWREADY;
    sc_out< sc_uint<C_M_AXI_DX_ADDR_WIDTH> > m_axi_dx_AWADDR;
    sc_out< sc_uint<C_M_AXI_DX_ID_WIDTH> > m_axi_dx_AWID;
    sc_out< sc_lv<8> > m_axi_dx_AWLEN;
    sc_out< sc_lv<3> > m_axi_dx_AWSIZE;
    sc_out< sc_lv<2> > m_axi_dx_AWBURST;
    sc_out< sc_lv<2> > m_axi_dx_AWLOCK;
    sc_out< sc_lv<4> > m_axi_dx_AWCACHE;
    sc_out< sc_lv<3> > m_axi_dx_AWPROT;
    sc_out< sc_lv<4> > m_axi_dx_AWQOS;
    sc_out< sc_lv<4> > m_axi_dx_AWREGION;
    sc_out< sc_uint<C_M_AXI_DX_AWUSER_WIDTH> > m_axi_dx_AWUSER;
    sc_out< sc_logic > m_axi_dx_WVALID;
    sc_in< sc_logic > m_axi_dx_WREADY;
    sc_out< sc_uint<C_M_AXI_DX_DATA_WIDTH> > m_axi_dx_WDATA;
    sc_out< sc_uint<C_M_AXI_DX_DATA_WIDTH/8> > m_axi_dx_WSTRB;
    sc_out< sc_logic > m_axi_dx_WLAST;
    sc_out< sc_uint<C_M_AXI_DX_ID_WIDTH> > m_axi_dx_WID;
    sc_out< sc_uint<C_M_AXI_DX_WUSER_WIDTH> > m_axi_dx_WUSER;
    sc_out< sc_logic > m_axi_dx_ARVALID;
    sc_in< sc_logic > m_axi_dx_ARREADY;
    sc_out< sc_uint<C_M_AXI_DX_ADDR_WIDTH> > m_axi_dx_ARADDR;
    sc_out< sc_uint<C_M_AXI_DX_ID_WIDTH> > m_axi_dx_ARID;
    sc_out< sc_lv<8> > m_axi_dx_ARLEN;
    sc_out< sc_lv<3> > m_axi_dx_ARSIZE;
    sc_out< sc_lv<2> > m_axi_dx_ARBURST;
    sc_out< sc_lv<2> > m_axi_dx_ARLOCK;
    sc_out< sc_lv<4> > m_axi_dx_ARCACHE;
    sc_out< sc_lv<3> > m_axi_dx_ARPROT;
    sc_out< sc_lv<4> > m_axi_dx_ARQOS;
    sc_out< sc_lv<4> > m_axi_dx_ARREGION;
    sc_out< sc_uint<C_M_AXI_DX_ARUSER_WIDTH> > m_axi_dx_ARUSER;
    sc_in< sc_logic > m_axi_dx_RVALID;
    sc_out< sc_logic > m_axi_dx_RREADY;
    sc_in< sc_uint<C_M_AXI_DX_DATA_WIDTH> > m_axi_dx_RDATA;
    sc_in< sc_logic > m_axi_dx_RLAST;
    sc_in< sc_uint<C_M_AXI_DX_ID_WIDTH> > m_axi_dx_RID;
    sc_in< sc_uint<C_M_AXI_DX_RUSER_WIDTH> > m_axi_dx_RUSER;
    sc_in< sc_lv<2> > m_axi_dx_RRESP;
    sc_in< sc_logic > m_axi_dx_BVALID;
    sc_out< sc_logic > m_axi_dx_BREADY;
    sc_in< sc_lv<2> > m_axi_dx_BRESP;
    sc_in< sc_uint<C_M_AXI_DX_ID_WIDTH> > m_axi_dx_BID;
    sc_in< sc_uint<C_M_AXI_DX_BUSER_WIDTH> > m_axi_dx_BUSER;
    sc_out< sc_logic > m_axi_dy_AWVALID;
    sc_in< sc_logic > m_axi_dy_AWREADY;
    sc_out< sc_uint<C_M_AXI_DY_ADDR_WIDTH> > m_axi_dy_AWADDR;
    sc_out< sc_uint<C_M_AXI_DY_ID_WIDTH> > m_axi_dy_AWID;
    sc_out< sc_lv<8> > m_axi_dy_AWLEN;
    sc_out< sc_lv<3> > m_axi_dy_AWSIZE;
    sc_out< sc_lv<2> > m_axi_dy_AWBURST;
    sc_out< sc_lv<2> > m_axi_dy_AWLOCK;
    sc_out< sc_lv<4> > m_axi_dy_AWCACHE;
    sc_out< sc_lv<3> > m_axi_dy_AWPROT;
    sc_out< sc_lv<4> > m_axi_dy_AWQOS;
    sc_out< sc_lv<4> > m_axi_dy_AWREGION;
    sc_out< sc_uint<C_M_AXI_DY_AWUSER_WIDTH> > m_axi_dy_AWUSER;
    sc_out< sc_logic > m_axi_dy_WVALID;
    sc_in< sc_logic > m_axi_dy_WREADY;
    sc_out< sc_uint<C_M_AXI_DY_DATA_WIDTH> > m_axi_dy_WDATA;
    sc_out< sc_uint<C_M_AXI_DY_DATA_WIDTH/8> > m_axi_dy_WSTRB;
    sc_out< sc_logic > m_axi_dy_WLAST;
    sc_out< sc_uint<C_M_AXI_DY_ID_WIDTH> > m_axi_dy_WID;
    sc_out< sc_uint<C_M_AXI_DY_WUSER_WIDTH> > m_axi_dy_WUSER;
    sc_out< sc_logic > m_axi_dy_ARVALID;
    sc_in< sc_logic > m_axi_dy_ARREADY;
    sc_out< sc_uint<C_M_AXI_DY_ADDR_WIDTH> > m_axi_dy_ARADDR;
    sc_out< sc_uint<C_M_AXI_DY_ID_WIDTH> > m_axi_dy_ARID;
    sc_out< sc_lv<8> > m_axi_dy_ARLEN;
    sc_out< sc_lv<3> > m_axi_dy_ARSIZE;
    sc_out< sc_lv<2> > m_axi_dy_ARBURST;
    sc_out< sc_lv<2> > m_axi_dy_ARLOCK;
    sc_out< sc_lv<4> > m_axi_dy_ARCACHE;
    sc_out< sc_lv<3> > m_axi_dy_ARPROT;
    sc_out< sc_lv<4> > m_axi_dy_ARQOS;
    sc_out< sc_lv<4> > m_axi_dy_ARREGION;
    sc_out< sc_uint<C_M_AXI_DY_ARUSER_WIDTH> > m_axi_dy_ARUSER;
    sc_in< sc_logic > m_axi_dy_RVALID;
    sc_out< sc_logic > m_axi_dy_RREADY;
    sc_in< sc_uint<C_M_AXI_DY_DATA_WIDTH> > m_axi_dy_RDATA;
    sc_in< sc_logic > m_axi_dy_RLAST;
    sc_in< sc_uint<C_M_AXI_DY_ID_WIDTH> > m_axi_dy_RID;
    sc_in< sc_uint<C_M_AXI_DY_RUSER_WIDTH> > m_axi_dy_RUSER;
    sc_in< sc_lv<2> > m_axi_dy_RRESP;
    sc_in< sc_logic > m_axi_dy_BVALID;
    sc_out< sc_logic > m_axi_dy_BREADY;
    sc_in< sc_lv<2> > m_axi_dy_BRESP;
    sc_in< sc_uint<C_M_AXI_DY_ID_WIDTH> > m_axi_dy_BID;
    sc_in< sc_uint<C_M_AXI_DY_BUSER_WIDTH> > m_axi_dy_BUSER;
    sc_out< sc_logic > m_axi_db_AWVALID;
    sc_in< sc_logic > m_axi_db_AWREADY;
    sc_out< sc_uint<C_M_AXI_DB_ADDR_WIDTH> > m_axi_db_AWADDR;
    sc_out< sc_uint<C_M_AXI_DB_ID_WIDTH> > m_axi_db_AWID;
    sc_out< sc_lv<8> > m_axi_db_AWLEN;
    sc_out< sc_lv<3> > m_axi_db_AWSIZE;
    sc_out< sc_lv<2> > m_axi_db_AWBURST;
    sc_out< sc_lv<2> > m_axi_db_AWLOCK;
    sc_out< sc_lv<4> > m_axi_db_AWCACHE;
    sc_out< sc_lv<3> > m_axi_db_AWPROT;
    sc_out< sc_lv<4> > m_axi_db_AWQOS;
    sc_out< sc_lv<4> > m_axi_db_AWREGION;
    sc_out< sc_uint<C_M_AXI_DB_AWUSER_WIDTH> > m_axi_db_AWUSER;
    sc_out< sc_logic > m_axi_db_WVALID;
    sc_in< sc_logic > m_axi_db_WREADY;
    sc_out< sc_uint<C_M_AXI_DB_DATA_WIDTH> > m_axi_db_WDATA;
    sc_out< sc_uint<C_M_AXI_DB_DATA_WIDTH/8> > m_axi_db_WSTRB;
    sc_out< sc_logic > m_axi_db_WLAST;
    sc_out< sc_uint<C_M_AXI_DB_ID_WIDTH> > m_axi_db_WID;
    sc_out< sc_uint<C_M_AXI_DB_WUSER_WIDTH> > m_axi_db_WUSER;
    sc_out< sc_logic > m_axi_db_ARVALID;
    sc_in< sc_logic > m_axi_db_ARREADY;
    sc_out< sc_uint<C_M_AXI_DB_ADDR_WIDTH> > m_axi_db_ARADDR;
    sc_out< sc_uint<C_M_AXI_DB_ID_WIDTH> > m_axi_db_ARID;
    sc_out< sc_lv<8> > m_axi_db_ARLEN;
    sc_out< sc_lv<3> > m_axi_db_ARSIZE;
    sc_out< sc_lv<2> > m_axi_db_ARBURST;
    sc_out< sc_lv<2> > m_axi_db_ARLOCK;
    sc_out< sc_lv<4> > m_axi_db_ARCACHE;
    sc_out< sc_lv<3> > m_axi_db_ARPROT;
    sc_out< sc_lv<4> > m_axi_db_ARQOS;
    sc_out< sc_lv<4> > m_axi_db_ARREGION;
    sc_out< sc_uint<C_M_AXI_DB_ARUSER_WIDTH> > m_axi_db_ARUSER;
    sc_in< sc_logic > m_axi_db_RVALID;
    sc_out< sc_logic > m_axi_db_RREADY;
    sc_in< sc_uint<C_M_AXI_DB_DATA_WIDTH> > m_axi_db_RDATA;
    sc_in< sc_logic > m_axi_db_RLAST;
    sc_in< sc_uint<C_M_AXI_DB_ID_WIDTH> > m_axi_db_RID;
    sc_in< sc_uint<C_M_AXI_DB_RUSER_WIDTH> > m_axi_db_RUSER;
    sc_in< sc_lv<2> > m_axi_db_RRESP;
    sc_in< sc_logic > m_axi_db_BVALID;
    sc_out< sc_logic > m_axi_db_BREADY;
    sc_in< sc_lv<2> > m_axi_db_BRESP;
    sc_in< sc_uint<C_M_AXI_DB_ID_WIDTH> > m_axi_db_BID;
    sc_in< sc_uint<C_M_AXI_DB_BUSER_WIDTH> > m_axi_db_BUSER;
    sc_out< sc_logic > m_axi_dw_AWVALID;
    sc_in< sc_logic > m_axi_dw_AWREADY;
    sc_out< sc_uint<C_M_AXI_DW_ADDR_WIDTH> > m_axi_dw_AWADDR;
    sc_out< sc_uint<C_M_AXI_DW_ID_WIDTH> > m_axi_dw_AWID;
    sc_out< sc_lv<8> > m_axi_dw_AWLEN;
    sc_out< sc_lv<3> > m_axi_dw_AWSIZE;
    sc_out< sc_lv<2> > m_axi_dw_AWBURST;
    sc_out< sc_lv<2> > m_axi_dw_AWLOCK;
    sc_out< sc_lv<4> > m_axi_dw_AWCACHE;
    sc_out< sc_lv<3> > m_axi_dw_AWPROT;
    sc_out< sc_lv<4> > m_axi_dw_AWQOS;
    sc_out< sc_lv<4> > m_axi_dw_AWREGION;
    sc_out< sc_uint<C_M_AXI_DW_AWUSER_WIDTH> > m_axi_dw_AWUSER;
    sc_out< sc_logic > m_axi_dw_WVALID;
    sc_in< sc_logic > m_axi_dw_WREADY;
    sc_out< sc_uint<C_M_AXI_DW_DATA_WIDTH> > m_axi_dw_WDATA;
    sc_out< sc_uint<C_M_AXI_DW_DATA_WIDTH/8> > m_axi_dw_WSTRB;
    sc_out< sc_logic > m_axi_dw_WLAST;
    sc_out< sc_uint<C_M_AXI_DW_ID_WIDTH> > m_axi_dw_WID;
    sc_out< sc_uint<C_M_AXI_DW_WUSER_WIDTH> > m_axi_dw_WUSER;
    sc_out< sc_logic > m_axi_dw_ARVALID;
    sc_in< sc_logic > m_axi_dw_ARREADY;
    sc_out< sc_uint<C_M_AXI_DW_ADDR_WIDTH> > m_axi_dw_ARADDR;
    sc_out< sc_uint<C_M_AXI_DW_ID_WIDTH> > m_axi_dw_ARID;
    sc_out< sc_lv<8> > m_axi_dw_ARLEN;
    sc_out< sc_lv<3> > m_axi_dw_ARSIZE;
    sc_out< sc_lv<2> > m_axi_dw_ARBURST;
    sc_out< sc_lv<2> > m_axi_dw_ARLOCK;
    sc_out< sc_lv<4> > m_axi_dw_ARCACHE;
    sc_out< sc_lv<3> > m_axi_dw_ARPROT;
    sc_out< sc_lv<4> > m_axi_dw_ARQOS;
    sc_out< sc_lv<4> > m_axi_dw_ARREGION;
    sc_out< sc_uint<C_M_AXI_DW_ARUSER_WIDTH> > m_axi_dw_ARUSER;
    sc_in< sc_logic > m_axi_dw_RVALID;
    sc_out< sc_logic > m_axi_dw_RREADY;
    sc_in< sc_uint<C_M_AXI_DW_DATA_WIDTH> > m_axi_dw_RDATA;
    sc_in< sc_logic > m_axi_dw_RLAST;
    sc_in< sc_uint<C_M_AXI_DW_ID_WIDTH> > m_axi_dw_RID;
    sc_in< sc_uint<C_M_AXI_DW_RUSER_WIDTH> > m_axi_dw_RUSER;
    sc_in< sc_lv<2> > m_axi_dw_RRESP;
    sc_in< sc_logic > m_axi_dw_BVALID;
    sc_out< sc_logic > m_axi_dw_BREADY;
    sc_in< sc_lv<2> > m_axi_dw_BRESP;
    sc_in< sc_uint<C_M_AXI_DW_ID_WIDTH> > m_axi_dw_BID;
    sc_in< sc_uint<C_M_AXI_DW_BUSER_WIDTH> > m_axi_dw_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const8;


    // Module declarations
    backward_fcc(sc_module_name name);
    SC_HAS_PROCESS(backward_fcc);

    ~backward_fcc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    backward_fcc_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* backward_fcc_AXILiteS_s_axi_U;
    backward_fcc_x_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_X_ID_WIDTH,C_M_AXI_X_ADDR_WIDTH,C_M_AXI_X_DATA_WIDTH,C_M_AXI_X_AWUSER_WIDTH,C_M_AXI_X_ARUSER_WIDTH,C_M_AXI_X_WUSER_WIDTH,C_M_AXI_X_RUSER_WIDTH,C_M_AXI_X_BUSER_WIDTH,C_M_AXI_X_TARGET_ADDR,C_M_AXI_X_USER_VALUE,C_M_AXI_X_PROT_VALUE,C_M_AXI_X_CACHE_VALUE>* backward_fcc_x_m_axi_U;
    backward_fcc_w_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_W_ID_WIDTH,C_M_AXI_W_ADDR_WIDTH,C_M_AXI_W_DATA_WIDTH,C_M_AXI_W_AWUSER_WIDTH,C_M_AXI_W_ARUSER_WIDTH,C_M_AXI_W_WUSER_WIDTH,C_M_AXI_W_RUSER_WIDTH,C_M_AXI_W_BUSER_WIDTH,C_M_AXI_W_TARGET_ADDR,C_M_AXI_W_USER_VALUE,C_M_AXI_W_PROT_VALUE,C_M_AXI_W_CACHE_VALUE>* backward_fcc_w_m_axi_U;
    backward_fcc_dx_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DX_ID_WIDTH,C_M_AXI_DX_ADDR_WIDTH,C_M_AXI_DX_DATA_WIDTH,C_M_AXI_DX_AWUSER_WIDTH,C_M_AXI_DX_ARUSER_WIDTH,C_M_AXI_DX_WUSER_WIDTH,C_M_AXI_DX_RUSER_WIDTH,C_M_AXI_DX_BUSER_WIDTH,C_M_AXI_DX_TARGET_ADDR,C_M_AXI_DX_USER_VALUE,C_M_AXI_DX_PROT_VALUE,C_M_AXI_DX_CACHE_VALUE>* backward_fcc_dx_m_axi_U;
    backward_fcc_dy_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DY_ID_WIDTH,C_M_AXI_DY_ADDR_WIDTH,C_M_AXI_DY_DATA_WIDTH,C_M_AXI_DY_AWUSER_WIDTH,C_M_AXI_DY_ARUSER_WIDTH,C_M_AXI_DY_WUSER_WIDTH,C_M_AXI_DY_RUSER_WIDTH,C_M_AXI_DY_BUSER_WIDTH,C_M_AXI_DY_TARGET_ADDR,C_M_AXI_DY_USER_VALUE,C_M_AXI_DY_PROT_VALUE,C_M_AXI_DY_CACHE_VALUE>* backward_fcc_dy_m_axi_U;
    backward_fcc_db_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DB_ID_WIDTH,C_M_AXI_DB_ADDR_WIDTH,C_M_AXI_DB_DATA_WIDTH,C_M_AXI_DB_AWUSER_WIDTH,C_M_AXI_DB_ARUSER_WIDTH,C_M_AXI_DB_WUSER_WIDTH,C_M_AXI_DB_RUSER_WIDTH,C_M_AXI_DB_BUSER_WIDTH,C_M_AXI_DB_TARGET_ADDR,C_M_AXI_DB_USER_VALUE,C_M_AXI_DB_PROT_VALUE,C_M_AXI_DB_CACHE_VALUE>* backward_fcc_db_m_axi_U;
    backward_fcc_dw_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DW_ID_WIDTH,C_M_AXI_DW_ADDR_WIDTH,C_M_AXI_DW_DATA_WIDTH,C_M_AXI_DW_AWUSER_WIDTH,C_M_AXI_DW_ARUSER_WIDTH,C_M_AXI_DW_WUSER_WIDTH,C_M_AXI_DW_RUSER_WIDTH,C_M_AXI_DW_BUSER_WIDTH,C_M_AXI_DW_TARGET_ADDR,C_M_AXI_DW_USER_VALUE,C_M_AXI_DW_PROT_VALUE,C_M_AXI_DW_CACHE_VALUE>* backward_fcc_dw_m_axi_U;
    backward_fcc_fmulbkb<1,4,32,32,32>* backward_fcc_fmulbkb_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<63> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > xdim;
    sc_signal< sc_lv<32> > ydim;
    sc_signal< sc_logic > x_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<1> > icmp_ln22_fu_333_p2;
    sc_signal< sc_logic > x_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > w_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > w_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > dx_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > dx_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > dx_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > dy_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln15_fu_268_p2;
    sc_signal< sc_logic > dy_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_lv<1> > icmp_ln23_fu_369_p2;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_lv<1> > icmp_ln29_fu_384_p2;
    sc_signal< sc_logic > db_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_logic > db_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state59;
    sc_signal< sc_logic > db_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_logic > dw_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > dw_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > dw_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_logic > x_AWREADY;
    sc_signal< sc_logic > x_WREADY;
    sc_signal< sc_logic > x_ARVALID;
    sc_signal< sc_logic > x_ARREADY;
    sc_signal< sc_logic > x_RVALID;
    sc_signal< sc_logic > x_RREADY;
    sc_signal< sc_lv<32> > x_RDATA;
    sc_signal< sc_logic > x_RLAST;
    sc_signal< sc_lv<1> > x_RID;
    sc_signal< sc_lv<1> > x_RUSER;
    sc_signal< sc_lv<2> > x_RRESP;
    sc_signal< sc_logic > x_BVALID;
    sc_signal< sc_lv<2> > x_BRESP;
    sc_signal< sc_lv<1> > x_BID;
    sc_signal< sc_lv<1> > x_BUSER;
    sc_signal< sc_logic > w_AWREADY;
    sc_signal< sc_logic > w_WREADY;
    sc_signal< sc_logic > w_ARVALID;
    sc_signal< sc_logic > w_ARREADY;
    sc_signal< sc_lv<32> > w_ARADDR;
    sc_signal< sc_logic > w_RVALID;
    sc_signal< sc_logic > w_RREADY;
    sc_signal< sc_lv<32> > w_RDATA;
    sc_signal< sc_logic > w_RLAST;
    sc_signal< sc_lv<1> > w_RID;
    sc_signal< sc_lv<1> > w_RUSER;
    sc_signal< sc_lv<2> > w_RRESP;
    sc_signal< sc_logic > w_BVALID;
    sc_signal< sc_lv<2> > w_BRESP;
    sc_signal< sc_lv<1> > w_BID;
    sc_signal< sc_lv<1> > w_BUSER;
    sc_signal< sc_logic > dx_AWVALID;
    sc_signal< sc_logic > dx_AWREADY;
    sc_signal< sc_logic > dx_WVALID;
    sc_signal< sc_logic > dx_WREADY;
    sc_signal< sc_logic > dx_ARREADY;
    sc_signal< sc_logic > dx_RVALID;
    sc_signal< sc_lv<32> > dx_RDATA;
    sc_signal< sc_logic > dx_RLAST;
    sc_signal< sc_lv<1> > dx_RID;
    sc_signal< sc_lv<1> > dx_RUSER;
    sc_signal< sc_lv<2> > dx_RRESP;
    sc_signal< sc_logic > dx_BVALID;
    sc_signal< sc_logic > dx_BREADY;
    sc_signal< sc_lv<2> > dx_BRESP;
    sc_signal< sc_lv<1> > dx_BID;
    sc_signal< sc_lv<1> > dx_BUSER;
    sc_signal< sc_logic > dy_AWREADY;
    sc_signal< sc_logic > dy_WREADY;
    sc_signal< sc_logic > dy_ARVALID;
    sc_signal< sc_logic > dy_ARREADY;
    sc_signal< sc_lv<32> > dy_ARADDR;
    sc_signal< sc_lv<32> > dy_ARLEN;
    sc_signal< sc_logic > dy_RVALID;
    sc_signal< sc_logic > dy_RREADY;
    sc_signal< sc_lv<32> > dy_RDATA;
    sc_signal< sc_logic > dy_RLAST;
    sc_signal< sc_lv<1> > dy_RID;
    sc_signal< sc_lv<1> > dy_RUSER;
    sc_signal< sc_lv<2> > dy_RRESP;
    sc_signal< sc_logic > dy_BVALID;
    sc_signal< sc_lv<2> > dy_BRESP;
    sc_signal< sc_lv<1> > dy_BID;
    sc_signal< sc_lv<1> > dy_BUSER;
    sc_signal< sc_logic > db_AWVALID;
    sc_signal< sc_logic > db_AWREADY;
    sc_signal< sc_logic > db_WVALID;
    sc_signal< sc_logic > db_WREADY;
    sc_signal< sc_logic > db_ARREADY;
    sc_signal< sc_logic > db_RVALID;
    sc_signal< sc_lv<32> > db_RDATA;
    sc_signal< sc_logic > db_RLAST;
    sc_signal< sc_lv<1> > db_RID;
    sc_signal< sc_lv<1> > db_RUSER;
    sc_signal< sc_lv<2> > db_RRESP;
    sc_signal< sc_logic > db_BVALID;
    sc_signal< sc_logic > db_BREADY;
    sc_signal< sc_lv<2> > db_BRESP;
    sc_signal< sc_lv<1> > db_BID;
    sc_signal< sc_lv<1> > db_BUSER;
    sc_signal< sc_logic > dw_AWVALID;
    sc_signal< sc_logic > dw_AWREADY;
    sc_signal< sc_lv<32> > dw_AWADDR;
    sc_signal< sc_logic > dw_WVALID;
    sc_signal< sc_logic > dw_WREADY;
    sc_signal< sc_logic > dw_ARREADY;
    sc_signal< sc_logic > dw_RVALID;
    sc_signal< sc_lv<32> > dw_RDATA;
    sc_signal< sc_logic > dw_RLAST;
    sc_signal< sc_lv<1> > dw_RID;
    sc_signal< sc_lv<1> > dw_RUSER;
    sc_signal< sc_lv<2> > dw_RRESP;
    sc_signal< sc_logic > dw_BVALID;
    sc_signal< sc_logic > dw_BREADY;
    sc_signal< sc_lv<2> > dw_BRESP;
    sc_signal< sc_lv<1> > dw_BID;
    sc_signal< sc_lv<1> > dw_BUSER;
    sc_signal< sc_lv<32> > reg_252;
    sc_signal< bool > ap_block_state17;
    sc_signal< bool > ap_block_state58;
    sc_signal< sc_lv<32> > grp_fu_248_p2;
    sc_signal< sc_lv<32> > reg_258;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<32> > ydim_read_reg_395;
    sc_signal< sc_lv<32> > xdim_read_reg_404;
    sc_signal< sc_lv<32> > zext_ln15_fu_264_p1;
    sc_signal< sc_lv<32> > zext_ln15_reg_414;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<31> > i_fu_273_p2;
    sc_signal< sc_lv<31> > i_reg_422;
    sc_signal< sc_lv<32> > dx_addr_reg_427;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<31> > j_fu_298_p2;
    sc_signal< sc_lv<31> > j_reg_436;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > add_ln17_1_fu_304_p2;
    sc_signal< sc_lv<32> > add_ln17_1_reg_441;
    sc_signal< sc_lv<1> > icmp_ln16_fu_293_p2;
    sc_signal< sc_lv<32> > add_ln17_fu_309_p2;
    sc_signal< sc_lv<32> > add_ln17_reg_446;
    sc_signal< sc_lv<32> > w_addr_read_reg_457;
    sc_signal< sc_lv<32> > add_ln22_fu_324_p2;
    sc_signal< sc_lv<32> > add_ln22_reg_462;
    sc_signal< bool > ap_block_state28_io;
    sc_signal< sc_lv<31> > i_1_fu_338_p2;
    sc_signal< sc_lv<31> > i_1_reg_470;
    sc_signal< sc_lv<32> > dy_addr_reg_475;
    sc_signal< sc_lv<31> > j_1_fu_374_p2;
    sc_signal< sc_lv<31> > j_1_reg_490;
    sc_signal< bool > ap_block_state35_io;
    sc_signal< sc_lv<32> > dy_addr_read_reg_495;
    sc_signal< bool > ap_block_state42;
    sc_signal< sc_lv<32> > x_read_reg_500;
    sc_signal< sc_lv<31> > i_2_fu_389_p2;
    sc_signal< sc_lv<31> > i_2_reg_508;
    sc_signal< sc_lv<31> > i_0_reg_168;
    sc_signal< sc_lv<31> > j_0_reg_180;
    sc_signal< sc_lv<32> > phi_mul_reg_191;
    sc_signal< sc_lv<31> > i1_0_reg_202;
    sc_signal< sc_lv<32> > phi_mul1_reg_214;
    sc_signal< sc_lv<31> > j2_0_reg_226;
    sc_signal< sc_lv<31> > i3_0_reg_237;
    sc_signal< sc_lv<64> > zext_ln17_fu_279_p1;
    sc_signal< sc_lv<64> > sext_ln17_fu_314_p1;
    sc_signal< sc_lv<64> > zext_ln24_fu_344_p1;
    sc_signal< sc_lv<64> > sext_ln24_fu_354_p1;
    sc_signal< sc_lv<32> > grp_fu_248_p0;
    sc_signal< sc_lv<32> > grp_fu_248_p1;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<32> > zext_ln16_fu_289_p1;
    sc_signal< sc_lv<32> > zext_ln22_fu_329_p1;
    sc_signal< sc_lv<32> > zext_ln23_fu_365_p1;
    sc_signal< sc_lv<32> > zext_ln29_fu_380_p1;
    sc_signal< sc_logic > grp_fu_248_ce;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_lv<63> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<63> ap_ST_fsm_state1;
    static const sc_lv<63> ap_ST_fsm_state2;
    static const sc_lv<63> ap_ST_fsm_state3;
    static const sc_lv<63> ap_ST_fsm_state4;
    static const sc_lv<63> ap_ST_fsm_state5;
    static const sc_lv<63> ap_ST_fsm_state6;
    static const sc_lv<63> ap_ST_fsm_state7;
    static const sc_lv<63> ap_ST_fsm_state8;
    static const sc_lv<63> ap_ST_fsm_state9;
    static const sc_lv<63> ap_ST_fsm_state10;
    static const sc_lv<63> ap_ST_fsm_state11;
    static const sc_lv<63> ap_ST_fsm_state12;
    static const sc_lv<63> ap_ST_fsm_state13;
    static const sc_lv<63> ap_ST_fsm_state14;
    static const sc_lv<63> ap_ST_fsm_state15;
    static const sc_lv<63> ap_ST_fsm_state16;
    static const sc_lv<63> ap_ST_fsm_state17;
    static const sc_lv<63> ap_ST_fsm_state18;
    static const sc_lv<63> ap_ST_fsm_state19;
    static const sc_lv<63> ap_ST_fsm_state20;
    static const sc_lv<63> ap_ST_fsm_state21;
    static const sc_lv<63> ap_ST_fsm_state22;
    static const sc_lv<63> ap_ST_fsm_state23;
    static const sc_lv<63> ap_ST_fsm_state24;
    static const sc_lv<63> ap_ST_fsm_state25;
    static const sc_lv<63> ap_ST_fsm_state26;
    static const sc_lv<63> ap_ST_fsm_state27;
    static const sc_lv<63> ap_ST_fsm_state28;
    static const sc_lv<63> ap_ST_fsm_state29;
    static const sc_lv<63> ap_ST_fsm_state30;
    static const sc_lv<63> ap_ST_fsm_state31;
    static const sc_lv<63> ap_ST_fsm_state32;
    static const sc_lv<63> ap_ST_fsm_state33;
    static const sc_lv<63> ap_ST_fsm_state34;
    static const sc_lv<63> ap_ST_fsm_state35;
    static const sc_lv<63> ap_ST_fsm_state36;
    static const sc_lv<63> ap_ST_fsm_state37;
    static const sc_lv<63> ap_ST_fsm_state38;
    static const sc_lv<63> ap_ST_fsm_state39;
    static const sc_lv<63> ap_ST_fsm_state40;
    static const sc_lv<63> ap_ST_fsm_state41;
    static const sc_lv<63> ap_ST_fsm_state42;
    static const sc_lv<63> ap_ST_fsm_state43;
    static const sc_lv<63> ap_ST_fsm_state44;
    static const sc_lv<63> ap_ST_fsm_state45;
    static const sc_lv<63> ap_ST_fsm_state46;
    static const sc_lv<63> ap_ST_fsm_state47;
    static const sc_lv<63> ap_ST_fsm_state48;
    static const sc_lv<63> ap_ST_fsm_state49;
    static const sc_lv<63> ap_ST_fsm_state50;
    static const sc_lv<63> ap_ST_fsm_state51;
    static const sc_lv<63> ap_ST_fsm_state52;
    static const sc_lv<63> ap_ST_fsm_state53;
    static const sc_lv<63> ap_ST_fsm_state54;
    static const sc_lv<63> ap_ST_fsm_state55;
    static const sc_lv<63> ap_ST_fsm_state56;
    static const sc_lv<63> ap_ST_fsm_state57;
    static const sc_lv<63> ap_ST_fsm_state58;
    static const sc_lv<63> ap_ST_fsm_state59;
    static const sc_lv<63> ap_ST_fsm_state60;
    static const sc_lv<63> ap_ST_fsm_state61;
    static const sc_lv<63> ap_ST_fsm_state62;
    static const sc_lv<63> ap_ST_fsm_state63;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_32;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_X_TARGET_ADDR;
    static const int C_M_AXI_X_USER_VALUE;
    static const int C_M_AXI_X_PROT_VALUE;
    static const int C_M_AXI_X_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_W_TARGET_ADDR;
    static const int C_M_AXI_W_USER_VALUE;
    static const int C_M_AXI_W_PROT_VALUE;
    static const int C_M_AXI_W_CACHE_VALUE;
    static const int C_M_AXI_Y_TARGET_ADDR;
    static const int C_M_AXI_Y_USER_VALUE;
    static const int C_M_AXI_Y_PROT_VALUE;
    static const int C_M_AXI_Y_CACHE_VALUE;
    static const int C_M_AXI_B_TARGET_ADDR;
    static const int C_M_AXI_B_USER_VALUE;
    static const int C_M_AXI_B_PROT_VALUE;
    static const int C_M_AXI_B_CACHE_VALUE;
    static const int C_M_AXI_DX_TARGET_ADDR;
    static const int C_M_AXI_DX_USER_VALUE;
    static const int C_M_AXI_DX_PROT_VALUE;
    static const int C_M_AXI_DX_CACHE_VALUE;
    static const int C_M_AXI_DY_TARGET_ADDR;
    static const int C_M_AXI_DY_USER_VALUE;
    static const int C_M_AXI_DY_PROT_VALUE;
    static const int C_M_AXI_DY_CACHE_VALUE;
    static const int C_M_AXI_DB_TARGET_ADDR;
    static const int C_M_AXI_DB_USER_VALUE;
    static const int C_M_AXI_DB_PROT_VALUE;
    static const int C_M_AXI_DB_CACHE_VALUE;
    static const int C_M_AXI_DW_TARGET_ADDR;
    static const int C_M_AXI_DW_USER_VALUE;
    static const int C_M_AXI_DW_PROT_VALUE;
    static const int C_M_AXI_DW_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_2D;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_add_ln17_1_fu_304_p2();
    void thread_add_ln17_fu_309_p2();
    void thread_add_ln22_fu_324_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state59();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state17();
    void thread_ap_block_state28_io();
    void thread_ap_block_state2_io();
    void thread_ap_block_state35_io();
    void thread_ap_block_state42();
    void thread_ap_block_state58();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_db_AWVALID();
    void thread_db_BREADY();
    void thread_db_WVALID();
    void thread_db_blk_n_AW();
    void thread_db_blk_n_B();
    void thread_db_blk_n_W();
    void thread_dw_AWADDR();
    void thread_dw_AWVALID();
    void thread_dw_BREADY();
    void thread_dw_WVALID();
    void thread_dw_blk_n_AW();
    void thread_dw_blk_n_B();
    void thread_dw_blk_n_W();
    void thread_dx_AWVALID();
    void thread_dx_BREADY();
    void thread_dx_WVALID();
    void thread_dx_blk_n_AW();
    void thread_dx_blk_n_B();
    void thread_dx_blk_n_W();
    void thread_dy_ARADDR();
    void thread_dy_ARLEN();
    void thread_dy_ARVALID();
    void thread_dy_RREADY();
    void thread_dy_blk_n_AR();
    void thread_dy_blk_n_R();
    void thread_grp_fu_248_ce();
    void thread_grp_fu_248_p0();
    void thread_grp_fu_248_p1();
    void thread_i_1_fu_338_p2();
    void thread_i_2_fu_389_p2();
    void thread_i_fu_273_p2();
    void thread_icmp_ln15_fu_268_p2();
    void thread_icmp_ln16_fu_293_p2();
    void thread_icmp_ln22_fu_333_p2();
    void thread_icmp_ln23_fu_369_p2();
    void thread_icmp_ln29_fu_384_p2();
    void thread_j_1_fu_374_p2();
    void thread_j_fu_298_p2();
    void thread_m_axi_b_ARADDR();
    void thread_m_axi_b_ARBURST();
    void thread_m_axi_b_ARCACHE();
    void thread_m_axi_b_ARID();
    void thread_m_axi_b_ARLEN();
    void thread_m_axi_b_ARLOCK();
    void thread_m_axi_b_ARPROT();
    void thread_m_axi_b_ARQOS();
    void thread_m_axi_b_ARREGION();
    void thread_m_axi_b_ARSIZE();
    void thread_m_axi_b_ARUSER();
    void thread_m_axi_b_ARVALID();
    void thread_m_axi_b_AWADDR();
    void thread_m_axi_b_AWBURST();
    void thread_m_axi_b_AWCACHE();
    void thread_m_axi_b_AWID();
    void thread_m_axi_b_AWLEN();
    void thread_m_axi_b_AWLOCK();
    void thread_m_axi_b_AWPROT();
    void thread_m_axi_b_AWQOS();
    void thread_m_axi_b_AWREGION();
    void thread_m_axi_b_AWSIZE();
    void thread_m_axi_b_AWUSER();
    void thread_m_axi_b_AWVALID();
    void thread_m_axi_b_BREADY();
    void thread_m_axi_b_RREADY();
    void thread_m_axi_b_WDATA();
    void thread_m_axi_b_WID();
    void thread_m_axi_b_WLAST();
    void thread_m_axi_b_WSTRB();
    void thread_m_axi_b_WUSER();
    void thread_m_axi_b_WVALID();
    void thread_m_axi_y_ARADDR();
    void thread_m_axi_y_ARBURST();
    void thread_m_axi_y_ARCACHE();
    void thread_m_axi_y_ARID();
    void thread_m_axi_y_ARLEN();
    void thread_m_axi_y_ARLOCK();
    void thread_m_axi_y_ARPROT();
    void thread_m_axi_y_ARQOS();
    void thread_m_axi_y_ARREGION();
    void thread_m_axi_y_ARSIZE();
    void thread_m_axi_y_ARUSER();
    void thread_m_axi_y_ARVALID();
    void thread_m_axi_y_AWADDR();
    void thread_m_axi_y_AWBURST();
    void thread_m_axi_y_AWCACHE();
    void thread_m_axi_y_AWID();
    void thread_m_axi_y_AWLEN();
    void thread_m_axi_y_AWLOCK();
    void thread_m_axi_y_AWPROT();
    void thread_m_axi_y_AWQOS();
    void thread_m_axi_y_AWREGION();
    void thread_m_axi_y_AWSIZE();
    void thread_m_axi_y_AWUSER();
    void thread_m_axi_y_AWVALID();
    void thread_m_axi_y_BREADY();
    void thread_m_axi_y_RREADY();
    void thread_m_axi_y_WDATA();
    void thread_m_axi_y_WID();
    void thread_m_axi_y_WLAST();
    void thread_m_axi_y_WSTRB();
    void thread_m_axi_y_WUSER();
    void thread_m_axi_y_WVALID();
    void thread_sext_ln17_fu_314_p1();
    void thread_sext_ln24_fu_354_p1();
    void thread_w_ARADDR();
    void thread_w_ARVALID();
    void thread_w_RREADY();
    void thread_w_blk_n_AR();
    void thread_w_blk_n_R();
    void thread_x_ARVALID();
    void thread_x_RREADY();
    void thread_x_blk_n_AR();
    void thread_x_blk_n_R();
    void thread_zext_ln15_fu_264_p1();
    void thread_zext_ln16_fu_289_p1();
    void thread_zext_ln17_fu_279_p1();
    void thread_zext_ln22_fu_329_p1();
    void thread_zext_ln23_fu_365_p1();
    void thread_zext_ln24_fu_344_p1();
    void thread_zext_ln29_fu_380_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
